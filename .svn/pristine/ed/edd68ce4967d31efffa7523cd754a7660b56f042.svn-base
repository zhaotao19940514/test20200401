
package cn.com.taiji.css.manager.customerservice.report;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.google.common.collect.Lists;

import cn.com.taiji.common.manager.ManagerException;
import cn.com.taiji.css.manager.abstractmanager.AbstractDsiCommManager;
import cn.com.taiji.css.model.customerservice.report.RegionStatisticsModel;
import cn.com.taiji.qtk.repo.jpa.AccountTradeDetailRepo;
import cn.com.taiji.qtk.repo.jpa.ChargeDetailRepo;
import cn.com.taiji.qtk.repo.jpa.FundSerialDetailRepo;
import cn.com.taiji.qtk.repo.jpa.PaymentBackDetailRepo;
import cn.com.taiji.qtk.repo.jpa.RegionRepo;


@Service
public class RegionStatisticsManagerImpl extends AbstractDsiCommManager implements RegionStatisticsManager{

	@Autowired
	private RegionRepo regionRepo;
	@Autowired
	private ChargeDetailRepo chargeDetailRepo;
	@Autowired
	private AccountTradeDetailRepo accountRepo;
	@Autowired
	private PaymentBackDetailRepo PaymentRepo;
	@Autowired
	private FundSerialDetailRepo fundRepo;
	
	
	@Override
	public List<RegionStatisticsModel> queryPage(RegionStatisticsModel queryModel, HttpServletRequest request) throws ManagerException {
		
		List<RegionStatisticsModel> modelList = Lists.newArrayList();
		String beforeDate = queryModel.getStartDate();
		String afterDate = queryModel.getEndDate();
		List<Object[]> allRegionName = regionRepo.getAllRegionName();
		//现金圈存
		List<Object[]> listChargeByRegion = chargeDetailRepo.listByRegion(beforeDate,afterDate);
		//账户充值
		List<Object[]> listAccountByRegion = accountRepo.listByRegionName(beforeDate.substring(0,4)+"-"+beforeDate.substring(4,6)+"-"+beforeDate.substring(6,8)+"T00:00:01", afterDate.substring(0,4)+"-"+afterDate.substring(4,6)+"-"+afterDate.substring(6,8)+"T23:59:59");
		//储值卡退款
		List<Object[]> listFunByRegion = fundRepo.listByRegionName(beforeDate, afterDate);
		//补缴
		List<Object[]> listPayByRegion = PaymentRepo.listByRegionName(beforeDate, afterDate);
		
		Map<String,Long> mapCharge = new HashMap<String,Long>();
		Map<String,Long> mapAccount = new HashMap<String,Long>();
		Map<String,Double> mapFun = new HashMap<String,Double>();
		Map<String,Double> mapPay = new HashMap<String,Double>();
		for(Object[] obj:listChargeByRegion) {
			mapCharge.put(obj[0].toString(), Long.valueOf(obj[1].toString()));
		}
		for(Object[] obj:listAccountByRegion) {
			mapAccount.put(obj[0].toString(), Long.valueOf(obj[1].toString()));
		}
		for(Object[] obj:listFunByRegion) {
			mapFun.put(obj[0].toString(), Double.valueOf(obj[1].toString()));
		}
		for(Object[] obj:listPayByRegion) {
			mapPay.put(obj[0].toString(), Double.valueOf(obj[1].toString()));
		}
		
		String regionName = null;
		for(Object obj:allRegionName) {
			regionName = String.valueOf(obj);
			RegionStatisticsModel model = new RegionStatisticsModel();
			model.setRegionName(regionName);
			if(null!=mapCharge.get(regionName)) {
				model.setAmount(mapCharge.get(regionName));
			}else {
				model.setAmount(0L);
			}
			if(null!=mapAccount.get(regionName)) {
				model.setAccountAmount(mapAccount.get(regionName));
			}else {
				model.setAccountAmount(0L);
			}
			if(null!=mapFun.get(regionName)) {
				model.setRefund(mapFun.get(regionName));
			}else {
				model.setRefund(0.0);
			}
			if(null!=mapPay.get(regionName)) {
				model.setPayAmount(mapPay.get(regionName));
			}else {
				model.setPayAmount(0.0);
			}
			model.setSum(model.getAmount()+model.getAccountAmount()+model.getPayAmount()-model.getRefund());
			modelList.add(model);
		}
		
		
		return modelList;
	}
	public static void main(String[] args) {
		String beforeDate ="20200324";
		System.out.println(beforeDate.substring(0,4)+"-"+beforeDate.substring(4,6)+"-"+beforeDate.substring(6,8)+"T00:00:01");
	}
	
}

